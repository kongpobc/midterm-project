
import java.util.*;
import java.io.*;
import java.nio.file.Files;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author mintn
 */

// Returns true if s is a number else false 



public class Delivery {

    public static void main(String[] args) {
        // TODO code application logic here

        int count = 0;
        Menu[] menu = new Menu[5];
        ArrayList<Menu> menuList = new ArrayList<>();
        boolean correct_mfile = true;
        boolean correct_file = true;

        do {
            try {
                System.out.println("1) Please enter the menu file name: ");
                Scanner input = new Scanner(System.in);
                File file = new File(input.nextLine());
                input = new Scanner(file);
                
                

                while (input.hasNextLine()) {
                    String line = input.nextLine();
                    String[] buffer = line.split(",");

                    //send viable to menu
                    String menu_name = buffer[0];
                    int menu_price = Integer.parseInt(buffer[1].trim());
                    
                    
                    
                    //put the name/price to menu 
                    // but how to put in buff and can use in the processorder?
                    Menu x = new Menu(menu_name, menu_price);
                    menuList.add(x);


                }
                /*for(int i = 0; i< menuList.size();i++)
                System.out.println(menuList.get(i).getMenu());*/
                correct_mfile = false;
                input.close();

            } catch (Exception e) {
                
                System.err.println(e);
            }
        } while (correct_mfile);
        
        
        

        do {
            try {
                System.out.println("2) Please enter the order file name: ");
                Scanner input = new Scanner(System.in);
                File file = new File(input.nextLine());
                input = new Scanner(file);
                
                //create the first customer 
                ArrayList<Customer> Customerlist = new ArrayList<Customer>();
                int check1 = 0;
                int check2 = 0;
                

                while (input.hasNextLine()) {
                    String line = input.nextLine();
                    String[] buffer = line.split(",");
                    String customer_name = buffer[0];
                    int [] order = new int[buffer.length-1];
                    for(int j=1; j<buffer.length;j++)
                    { order[j-1] = Integer.parseInt(buffer[j].trim());
                   
                    
                    boolean same_person = false;

                    //compare if customer name is the same or not
                    for (int i = 0; i < Customerlist.size(); i++) {

                        if (Customerlist.get(i).name.equalsIgnoreCase(customer_name)) {
                            same_person = true;
                            check1 = i;
                        }
                    }

                    //Show what the Customer order
                    if (same_person) {

                        System.out.printf("\n%7s >> order\n %s %d \n%s %d\n %s %d\n %s %d\n %s %d\n",
                                customer_name,
                                menu[0].getMenu(), order[0],
                                menu[1].getMenu(), order[1],
                                menu[2].getMenu(), order[2],
                                menu[3].getMenu(), order[3],
                                menu[4].getMenu(), order[4]
                        );
                        
                        
                        //send viable to Customer java
                        Customerlist.get(check1).processOrder(order[0], menu[0].getPrice(),
                                order[1], menu[1].getPrice(),
                                order[2], menu[2].getPrice(),
                                order[3], menu[3].getPrice(),
                                order[4], menu[4].getPrice(),
                                count, menu);

                    } //False 
                    
                    
                    
                    else {
                        
                        //Create new Array list, show  Customer order
                        Customerlist.add(new Customer(customer_name));
                        System.out.printf("\n%7s >> order\n %s %d\n %s %d\n %s %d\n %s %d\n %s %d\n",
                                 customer_name,
                                menu[0].getMenu(), order[0],
                                menu[1].getMenu(), order[1],
                                menu[2].getMenu(), order[2],
                                menu[3].getMenu(), order[3],
                                menu[4].getMenu(), order[4]
                        );
                        
                        //send viable to Customer java
                        Customerlist.get(check2).processOrder(
                                order[0], menu[0].getPrice(),
                                order[1], menu[1].getPrice(),
                                order[2], menu[2].getPrice(),
                                order[3], menu[3].getPrice(),
                                order[4], menu[4].getPrice(),
                                count, menu);
                        check2++;
                    }
                }
                }
                System.out.print("==== Customer summary ====\n");
                
                //print all of list in customer.
                Collections.sort(Customerlist);

                
                for (int ct = 0; ct < Customerlist.size(); ct++) {
                    System.out.printf("%s point = %7d\n",
                            Customerlist.get(ct).getName(),
                            Customerlist.get(ct).getPoint());
                }

                System.out.print("\n\n==== Menu summary ====\n");
                
                //print all of list in Arrays.
                Arrays.sort(menu);

                for (int ct = 0; ct < menu.length; ct++) {
                    System.out.printf("%-22s price = %4d total delivery = %3d\n",
                            menu[ct].getMenu(),
                            menu[ct].getPrice(),
                            menu[ct].getdish());
                }
                correct_file = false;
                input.close();

            } catch (Exception e) {
                System.out.println("file not found");
                
                System.err.println(e);
            
            }
            
            //Exercise 6//
        } while (correct_file);
    }
}
